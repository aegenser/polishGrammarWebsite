{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["NOUNS","require","ADJECTIVES","VIRILITIES","PLURALITIES","console","log","App","useState","inPracticeMode","setInPracticeMode","isDecline","setIsDecline","withAdjectives","setWithAdjectives","plurality","setPlurality","virility","setVirility","React","masculine","feminine","neuter","gender","setGender","dopełniacz","celownik","biernik","narzędnik","miejscownik","wołacz","cases","setCases","practiceInput","setPracticeInput","genderError","setGenderError","caseError","setCaseError","errorMessage","setErrorMessage","message","setMessage","callNoun","setCallNoun","callAdjective","setCallAdjective","callGender","setCallGender","callVirility","setCallVirility","callCase","setCallCase","callPlurality","setCallPlurality","setGenderWithError","newGender","setCasesWithError","newCases","generateCall","wordSet","genders","filter","g","randGender","Math","floor","random","length","randVirility","randCase","d","getResponse","response","plural","mianownik","animate","masc_inan_biernik","handleEnter","pluralOption","FormLabel","component","FormGroup","row","FormControlLabel","control","Radio","checked","onChange","event","color","label","virileOption","casesOption","error","Checkbox","target","className","Box","m","align","Grid","container","style","maxWidth","spacing","item","xs","alignContent","IconButton","onClick","ArrowBack","Typography","variant","TextField","onKeyDown","key","inputRef","input","focus","value","multiline","fullWidth","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a80f06ee.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Typography, Grid, Box, IconButton, FormGroup, Radio, Checkbox, FormControlLabel, FormLabel } from '@material-ui/core';\r\nimport { ArrowBack } from '@material-ui/icons';\r\n\r\nconst NOUNS = require('./nouns.json');\r\nconst ADJECTIVES = require('./adjectives.json');\r\nconst VIRILITIES = ['virile', 'nonvirile'];\r\nconst PLURALITIES = ['singular', 'plural'];\r\n\r\nconsole.log(NOUNS);\r\n\r\nfunction App() {\r\n  const [inPracticeMode, setInPracticeMode] = useState(false);\r\n  const [isDecline, setIsDecline] = useState(true);\r\n  const [withAdjectives, setWithAdjectives] = useState(true);\r\n  const [plurality, setPlurality] = useState('both');\r\n  const [virility, setVirility] = useState('both');\r\n  const [gender, setGender] = React.useState({\r\n    masculine: true,\r\n    feminine: true,\r\n    neuter: true\r\n  });\r\n  const [cases, setCases] = React.useState({\r\n    dopełniacz: true,\r\n    celownik: true,\r\n    biernik: true,\r\n    narzędnik: true,\r\n    miejscownik: true,\r\n    wołacz: false\r\n  });\r\n  const [practiceInput, setPracticeInput] = useState('');\r\n  const [genderError, setGenderError] = useState('');\r\n  const [caseError, setCaseError] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [callNoun, setCallNoun] = useState(null);\r\n  const [callAdjective, setCallAdjective] = useState(null);\r\n  const [callGender, setCallGender] = useState('');\r\n  const [callVirility, setCallVirility] = useState('');\r\n  const [callCase, setCallCase] = useState('');\r\n  const [callPlurality, setCallPlurality] = useState('');\r\n\r\n  function setGenderWithError(newGender) {\r\n    setGender(newGender);\r\n    if (newGender.masculine || newGender.feminine || newGender.neuter) {\r\n      setGenderError('');\r\n    } else {\r\n      setGenderError('You must select at least one gender');\r\n    }\r\n  }\r\n\r\n  function setCasesWithError(newCases) {\r\n    setCases(newCases);\r\n    if (newCases.dopełniacz || newCases.celownik || newCases.biernik ||\r\n        newCases.narzędnik || newCases.miejscownik || newCases.wołacz) {\r\n      setCaseError('');\r\n    } else {\r\n      setCaseError('You must select at least one case');\r\n    }\r\n  }\r\n\r\n  function generateCall() {\r\n    var wordSet;\r\n    var genders = ['masculine', 'feminine', 'neuter'].filter(g => gender[g]);\r\n    var randGender = genders[Math.floor(Math.random() * genders.length)];\r\n    setCallGender(randGender);\r\n    if (randGender === 'masculine') {\r\n      if (virility === 'both' || !isDecline || plurality === 'singular') {\r\n        var randVirility = VIRILITIES[Math.floor(Math.random() * VIRILITIES.length)];\r\n        wordSet = NOUNS[randGender][randVirility];\r\n        setCallVirility(randVirility);\r\n      } else {\r\n        wordSet = NOUNS[randGender][virility];\r\n        setCallVirility(virility);\r\n      }\r\n    }\r\n    else {\r\n      setCallVirility('nonvirile');\r\n      wordSet = NOUNS[randGender];\r\n    }\r\n    setCallNoun(wordSet[Math.floor(Math.random() * wordSet.length)]);\r\n    if (isDecline) {\r\n      if (plurality === 'both') {\r\n        setCallPlurality(PLURALITIES[Math.floor(Math.random() * PLURALITIES.length)])\r\n      } else {\r\n        setCallPlurality(plurality)\r\n      }\r\n      var randCase = ['dopełniacz', 'celownik', 'biernik', 'narzędnik', 'miejscownik', 'wołacz'].filter(d => cases[d]);\r\n      setCallCase(randCase[Math.floor(Math.random() * randCase.length)]);\r\n    } else {\r\n      setCallPlurality('singular');\r\n    }\r\n\r\n\r\n    if (withAdjectives) {\r\n      setCallAdjective(ADJECTIVES[Math.floor(Math.random() * ADJECTIVES.length)]);\r\n    }\r\n    else {\r\n      setCallAdjective(null);\r\n    }\r\n  }\r\n\r\n  function getAdjectiveForQuestion() {\r\n    if (callPlurality === 'plural') {\r\n      return callAdjective[callVirility].mianownik;\r\n    }\r\n    else {\r\n      return callAdjective[callGender].mianownik;\r\n    }\r\n  }\r\n\r\n  function getResponse() {\r\n    var response;\r\n\r\n    if (isDecline) {\r\n      response = callNoun[callPlurality][callCase];\r\n    } else {\r\n      response = callNoun.plural.mianownik;\r\n    }\r\n\r\n    if (callAdjective !== null) {\r\n      if (isDecline) {\r\n        if (callPlurality === 'plural') {\r\n          response = callAdjective[callVirility][callCase] + ' ' + response;;\r\n        }\r\n        else {\r\n          if (callCase === 'biernik' && callGender === 'masculine' && !callNoun.animate) {\r\n            response = callAdjective.masc_inan_biernik + ' ' + response;\r\n          } else {\r\n            response = callAdjective[callGender][callCase] + ' ' + response;\r\n          }\r\n        }\r\n      } else {\r\n        response = callAdjective[callVirility].mianownik + ' ' + response;\r\n      }\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  function showAnswer() {\r\n    setMessage(getResponse());\r\n    setErrorMessage('');\r\n  }\r\n\r\n  function handleEnter() {\r\n    if (practiceInput.length === 0 || practiceInput !== getResponse()) { // do something more here\r\n      setErrorMessage('Incorrect');\r\n      setMessage('');\r\n      setPracticeInput('');\r\n    } else {\r\n      setErrorMessage('');\r\n      setMessage('Nice Job!');\r\n      generateCall();\r\n      setPracticeInput('');\r\n    }\r\n  }\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      handleEnter();\r\n    }\r\n  }\r\n\r\n  let pluralOption = isDecline ? <div> <FormLabel component='legend'> Plural or Non-Plural? </FormLabel>\r\n  <FormGroup row>\r\n    <FormControlLabel\r\n      control={\r\n        <Radio\r\n          checked={plurality === 'singular'}\r\n          onChange={(event) => setPlurality('singular')}\r\n          color=\"primary\"\r\n        />\r\n      }\r\n      label=\"Singular\"\r\n    />\r\n    <FormControlLabel\r\n      control={\r\n        <Radio\r\n          checked={plurality === 'plural'}\r\n          onChange={(event) => setPlurality('plural')}\r\n          color=\"primary\"\r\n        />\r\n      }\r\n      label=\"Plural\"\r\n    />\r\n    <FormControlLabel\r\n      control={\r\n        <Radio\r\n          checked={plurality === 'both'}\r\n          onChange={(event) => setPlurality('both')}\r\n          color=\"primary\"\r\n        />\r\n      }\r\n      label=\"Both\"\r\n    />\r\n  </FormGroup> </div> : <div/>;\r\n\r\n  let virileOption = (isDecline && (plurality === 'both' || plurality === 'plural') && gender.masculine) ? <div> <FormLabel component='legend'> Virile or Non-Virile (or Animate/Non-Animate)? </FormLabel>\r\n  <FormGroup row>\r\n    <FormControlLabel\r\n      control={\r\n        <Radio\r\n          checked={virility === 'virile'}\r\n          onChange={(event) => setVirility('virile')}\r\n          color=\"primary\"\r\n        />\r\n      }\r\n      label=\"Virile\"\r\n    />\r\n    <FormControlLabel\r\n      control={\r\n        <Radio\r\n          checked={virility === 'nonvirile'}\r\n          onChange={(event) => setVirility('nonvirile')}\r\n          color=\"primary\"\r\n        />\r\n      }\r\n      label=\"Non-Virile\"\r\n    />\r\n    <FormControlLabel\r\n      control={\r\n        <Radio\r\n          checked={virility === 'both'}\r\n          onChange={(event) => setVirility('both')}\r\n          color=\"primary\"\r\n        />\r\n      }\r\n      label=\"Both\"\r\n    />\r\n  </FormGroup> </div> : <div/>;\r\n\r\n  let casesOption = (isDecline) ? <div> <FormLabel component='legend'> What Cases? </FormLabel>\r\n  <FormLabel component='legend' error={true}> {caseError} </FormLabel>\r\n  <FormGroup row>\r\n    <FormControlLabel\r\n      control={\r\n        <Checkbox\r\n          checked={cases.dopełniacz}\r\n          onChange={(event) => setCasesWithError({ ...cases, dopełniacz: event.target.checked })}\r\n          color=\"primary\"\r\n        />\r\n      }\r\n      label=\"Dopełniacz\"\r\n    />\r\n    <FormControlLabel\r\n      control={\r\n        <Checkbox\r\n          checked={cases.celownik}\r\n          onChange={(event) => setCasesWithError({ ...cases, celownik: event.target.checked })}\r\n          color=\"primary\"\r\n        />\r\n      }\r\n      label=\"Celownik\"\r\n    />\r\n    <FormControlLabel\r\n      control={\r\n        <Checkbox\r\n          checked={cases.biernik}\r\n          onChange={(event) => setCasesWithError({ ...cases, biernik: event.target.checked })}\r\n          color=\"primary\"\r\n        />\r\n      }\r\n      label=\"Biernik\"\r\n    />\r\n    <FormControlLabel\r\n      control={\r\n        <Checkbox\r\n          checked={cases.narzędnik}\r\n          onChange={(event) => setCasesWithError({ ...cases, narzędnik: event.target.checked })}\r\n          color=\"primary\"\r\n        />\r\n      }\r\n      label=\"Narzędnik\"\r\n    />\r\n    <FormControlLabel\r\n      control={\r\n        <Checkbox\r\n          checked={cases.miejscownik}\r\n          onChange={(event) => setCasesWithError({ ...cases, miejscownik: event.target.checked })}\r\n          color=\"primary\"\r\n        />\r\n      }\r\n      label=\"Miejscownik\"\r\n    />\r\n  </FormGroup> </div> : <div/>;\r\n\r\n  if (!inPracticeMode) {\r\n    return (\r\n      <div className=\"App\">\r\n        <Box m={2}>\r\n          <Box m='auto' align='center'>\r\n            <Grid container style={{maxWidth: '1000px'}} spacing={2} alignContent='center'>\r\n              <Grid container item xs={12}>\r\n                <Typography variant='h3'> Polish Grammar Practice </Typography>\r\n              </Grid>\r\n              <Grid container item xs={12} alignContent='center'>\r\n                <FormGroup>\r\n                  <FormLabel component='legend'> What would you like to practice? </FormLabel>\r\n                  <FormGroup row>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Radio\r\n                          checked={isDecline}\r\n                          onChange={(event) => setIsDecline(true)}\r\n                          color=\"primary\"\r\n                        />\r\n                      }\r\n                      label=\"Declension\"\r\n                    />\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Radio\r\n                          checked={!isDecline}\r\n                          onChange={(event) => setIsDecline(false)}\r\n                          color=\"primary\"\r\n                        />\r\n                      }\r\n                      label=\"Pluralization\"\r\n                    />\r\n                  </FormGroup>\r\n                  {casesOption}\r\n                  <FormLabel component='legend'> With or without adjectives? </FormLabel>\r\n                  <FormGroup row>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Radio\r\n                          checked={withAdjectives}\r\n                          onChange={(event) => setWithAdjectives(true)}\r\n                          color=\"primary\"\r\n                        />\r\n                      }\r\n                      label=\"With Adjectives\"\r\n                    />\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Radio\r\n                          checked={!withAdjectives}\r\n                          onChange={(event) => setWithAdjectives(false)}\r\n                          color=\"primary\"\r\n                        />\r\n                      }\r\n                      label=\"Without Adjectives\"\r\n                    />\r\n                  </FormGroup>\r\n                  {pluralOption}\r\n                  <FormLabel component='legend'> What Genders? </FormLabel>\r\n                  <FormLabel component='legend' error={true}> {genderError} </FormLabel>\r\n                  <FormGroup row>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={gender.masculine}\r\n                          onChange={(event) => setGenderWithError({ ...gender, masculine: event.target.checked })}\r\n                          color=\"primary\"\r\n                        />\r\n                      }\r\n                      label=\"Masculine\"\r\n                    />\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={gender.feminine}\r\n                          onChange={(event) => setGenderWithError({ ...gender, feminine: event.target.checked })}\r\n                          color=\"primary\"\r\n                        />\r\n                      }\r\n                      label=\"Feminine\"\r\n                    />\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={gender.neuter}\r\n                          onChange={(event) => setGenderWithError({ ...gender, neuter: event.target.checked })}\r\n                          color=\"primary\"\r\n                        />\r\n                      }\r\n                      label=\"Neuter\"\r\n                    />\r\n                  </FormGroup>\r\n                  {virileOption}\r\n                </FormGroup>\r\n              </Grid>\r\n              <Grid container item xs={12}>\r\n                <Button onClick={() => {\r\n                    if ((isDecline && caseError !== '') || genderError !== '') {\r\n                      return;\r\n                    }\r\n                    generateCall();\r\n                    setInPracticeMode(true);\r\n                  }}>\r\n                  Begin Practice!\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Box m={2}>\r\n        <Box m='auto' align='center'>\r\n          <Grid container style={{maxWidth: '1000px'}} spacing={2}>\r\n            <Grid container item xs={12} alignContent='left'>\r\n              <IconButton onClick={() => {\r\n                setInPracticeMode(false);\r\n                setMessage('');\r\n                setErrorMessage('');\r\n              }}>\r\n                <ArrowBack/>\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid container item xs={12}>\r\n              <Typography variant='h6'> What is {callAdjective !== null ? getAdjectiveForQuestion() : ''} {callNoun[callPlurality].mianownik} {isDecline ? `in ${callCase}` : 'plural'}? </Typography>\r\n            </Grid>\r\n            <Grid container item xs={12}>\r\n              <Typography variant='subtitle'> {message} </Typography>\r\n              <Typography color='error' variant='subtitle'> {errorMessage} </Typography>\r\n            </Grid>\r\n            <Grid container item xs={8}>\r\n              <TextField variant='outlined' onKeyDown={handleKeyDown} inputRef={input => input && input.focus()} value={practiceInput} label=\"Answer: \" multiline={false} fullWidth={true} onChange={function(value) {\r\n              if (value.target.value != null) {\r\n                setPracticeInput(value.target.value);\r\n              } else {\r\n                setPracticeInput(\"\");\r\n              }\r\n              }}>\r\n            </TextField>\r\n            </Grid>\r\n            <Grid container item xs={2}>\r\n              <Button onClick={() => handleEnter()}>\r\n                Enter\r\n              </Button>\r\n            </Grid>\r\n            <Grid container item xs={2}>\r\n              <Button onClick={() => showAnswer()}>\r\n                Show Answer\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}